name: Tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
        django-version:
          - "2.2"
          - "3.0"
          - "3.1"
          - master
        with-postgres:
          - true
          - false
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aldjemy
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.4"
      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies (django release ${{ matrix.django-version }})
        if: ${{ matrix.django-version != 'master' }}
        run: |
          poetry install
          poetry run pip install django==${{ matrix.django-version }}
      - name: Install dependencies (django development)
        if: ${{ matrix.django-version == 'master' }}
        run: |
          poetry install
          poetry run pip install https://github.com/django/django/archive/master.tar.gz
      - name: Run tests
        if: ${{ !matrix.with-postgres }}
        run: |
          poetry run ./test.sh
      - name: Run tests on postgres
        if: ${{ matrix.with-postgres }}
        run: |
          poetry run ./test.sh -p
