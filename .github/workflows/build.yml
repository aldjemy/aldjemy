name: Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "2.2"
          - "3.0"
          - "3.1"
          - "3.2"
        with-pg:
          - true
          - false
    services:
      pg:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aldjemy
        ports:
          - 5432:5432
    env:
      SQLALCHEMY_WARN_20: 1
    steps:
      - uses: actions/checkout@v2.3.5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: "1.1.11"
      - name: Setup cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install
      - name: Install Django ${{ matrix.django-version }}
        run: pip install -U 'django~=${{ matrix.django-version }}.0'
      - name: Run tests
        if: ${{ !matrix.with-pg }}
        run: poetry run ./test.sh
      - name: Run tests on postgres
        if: ${{ matrix.with-pg }}
        run: poetry run ./test.sh -p
